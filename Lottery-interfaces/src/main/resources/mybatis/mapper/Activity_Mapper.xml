<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.l13z.lottery.infrastructure.dao.IActivityDao">

    <resultMap id="activityMap" type="cn.l13z.lottery.infrastructure.po.Activity">
        <id column="id" property="id"/>
        <result column="activityId" property="activityId"/>
        <result column="activityName" property="activityName"/>
        <result column="activityDesc" property="strategyId" />
        <result column="beginDateTime" property="activityDesc"/>
        <result column="endDateTime" property="beginDateTime"/>
        <result column="stockCounttakeCount" property="endDateTime"/>
        <result column="state" property="stockCount"/>
        <result column="creator" property="takeCount"/>
        <result column="createTime" property="state"/>
        <result column="updateTime" property="creator"/>
        <result column="strategyId" property="createTime"/>
    </resultMap>


    <insert id="insert" parameterType="cn.l13z.lottery.infrastructure.po.Activity">
        INSERT INTO activity
        (activityId, activityName, activityDesc,beginDateTime, endDateTime,
        stockCount, takeCount, state, creator, createTime, updateTime)
        VALUES
        (#{activityId}, #{activityName}, #{activityDesc},#{beginDateTime}, #{endDateTime},
        #{stockCount}, #{takeCount}, #{state}, #{creator}, now(), now())
    </insert>

    <select id="queryActivityById" parameterType="java.lang.Long" resultType="cn.l13z.lottery.infrastructure.po.Activity">
        SELECT activityId, activityName, activityDesc,beginDateTime, endDateTime,
        stockCount, takeCount, state, creator, createTime, updateTime
        FROM activity
        WHERE activityId = #{activityId}
    </select>


    <update id="alterState" parameterType="cn.l13z.lottery.domain.activity.model.vo.AlterStateVO">
        UPDATE activity
        SET state = #{afterState}
        WHERE activityId = #{activityId} AND state = #{beforeState}
    </update>


    <update id="subtractionActivityStock" parameterType="java.lang.Long">
        UPDATE activity SET stockCount = stockCount - 1
        WHERE activityId = #{activityId} AND stockCount > 0
    </update>

    <select id="scanToDoActivityList" parameterType="java.lang.Long" resultMap="activityMap">
        SELECT activityId, activityName, beginDateTime, endDateTime, state, creator
        FROM activity
        WHERE id >= #{id} AND state in (4,5)
        ORDER BY ID ASC
        LIMIT 10
    </select>
</mapper>
